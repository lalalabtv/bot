# -*- coding: utf-8 -*-
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import vk_api
import sys  
import random
from array import *
reload(sys)  
sys.setdefaultencoding('utf-8')

token = "07622f74afe7be873d144286e593fbc11feb094fc78a59d0b3d4b71ae9fe4fb27c22395afdfb5c7001e5c"
vk_session = vk_api.VkApi(token=token)

class Pyanka(object):
    def __init__(self, data, place, persons, own_number, description, link):
        self.data = data
        self.place = place
        self.persons = persons
        self.description = description
        self.link = link
        self.own_number = own_number

p0 = Pyanka('null', 'test', 'null', '0', 'null', 'null')

partys = {p0}

kolvo = 0

session_api = vk_session.get_api()
longpoll = VkLongPoll(vk_session)
def create_keyboard(response):
    keyboard = VkKeyboard(one_time=False)
    if response == '–ø—Ä–∏–≤–µ—Ç':

        keyboard.add_button('–°–æ–∑–¥–∞—Ç—å –ø—å—è–Ω–∫—É', color =VkKeyboardColor.PRIMARY)
        keyboard.add_button('–ù–∞–π—Ç–∏ –ø—å—è–Ω–∫—É', color=VkKeyboardColor.POSITIVE)
        keyboard.add_button('–£–¥–∞–ª–∏—Ç—å –ø—å—è–Ω–∫—É', color=VkKeyboardColor.NEGATIVE)
    keyboard = keyboard.get_keyboard()
    
    return keyboard

while True:
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW:
            print("–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: " + str(event.text))
            print(event.user_id)
            response = event.text.lower()
            keyboard = create_keyboard(response)
            if event.from_user and response == '–ø—Ä–∏–≤–µ—Ç':
                vk_session.method('messages.send', {'user_id': event.user_id,
                                                    'message': '–ü—Ä–∏–≤–µ—Ç, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!' + '\n' + '\n' + '–í–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–∞–Ω–¥:' + '\n' + ' üë§ –°–æ–∑–¥–∞—Ç—å –ø—å—è–Ω–∫—É' + '\n' + ' üë• –ù–∞–π—Ç–∏ –ø—å—è–Ω–∫—É' + '\n' + ' ‚ùå –£–¥–∞–ª–∏—Ç—å –ø—å—è–Ω–∫—É',
                                                    'random_id': 0,
                                                    'keyboard': keyboard})
            if event.from_user and response == '–∫–æ–º–∞–Ω–¥—ã':
                vk_session.method('messages.send', {'user_id': event.user_id,
                                                    'message': '–í–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–∞–Ω–¥:' + '\n' + ' üë§ –°–æ–∑–¥–∞—Ç—å –ø—å—è–Ω–∫—É' + '\n' + ' üë• –ù–∞–π—Ç–∏ –ø—å—è–Ω–∫—É' + '\n' + ' ‚ùå –£–¥–∞–ª–∏—Ç—å –ø—å—è–Ω–∫—É',
                                                    'random_id': 0})
            if event.from_user and response == '–Ω–∞–π—Ç–∏ –ø—å—è–Ω–∫—É':
                vk_session.method('messages.send', {'user_id': event.user_id, 'message': 'üîä –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—å—è–Ω–∫–∏: ', 'random_id': 0})
                for x in partys:
                    if x.data != 'null':
                        vk_session.method('messages.send',
                                          {'user_id': event.user_id,
                                           'message': 'üìÜ –î–∞—Ç–∞: ' + x.data + '\n' + 'üè† –ú–µ—Å—Ç–æ: ' + x.place + '\n' + 'üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫:' + x.persons + '\n' + 'üë• –ë–µ—Å–µ–¥–∞:' + x.link,
                                           'random_id': 0})
            if event.from_user and response == '—É–¥–∞–ª–∏—Ç—å –ø—å—è–Ω–∫—É':
                flag = 1
                while flag == 1:
                    vk_session.method('messages.send',
                                      {'user_id': event.user_id, 'message': '–í–≤–µ–¥–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –ø—å—è–Ω–∫–∏', 'random_id': 0})
                    for event in longpoll.listen():
                        if event.type == VkEventType.MESSAGE_NEW and not event.from_me:
                            number = event.text
                            vk_session.method('messages.send',
                                              {'user_id': event.user_id, 'message': 'üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º...', 'random_id': 0})
                            for x in list(partys.keys()):
                                if x.own_number == number:
                                    partys.remove(x)
                            vk_session.method('messages.send',
                                              {'user_id': event.user_id, 'message': '‚úÖ –ü—å—è–Ω–∫–∞ —É–¥–∞–ª–µ–Ω–∞', 'random_id': 0})
                            flag = 0
                            break
                    break

            if event.from_user and response == '—Å–æ–∑–¥–∞—Ç—å –ø—å—è–Ω–∫—É':
                flag = 1
                while flag == 1:
                    id = event.user_id
                    p = Pyanka('null', 'null', 'null', '0', 'null', 'null')
                    vk_session.method('messages.send',
                                      {'user_id': id, 'message': '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É', 'random_id': 0})
                    for event in longpoll.listen():
                        if event.type == VkEventType.MESSAGE_NEW and not event.from_me and event.user_id == id:
                            p.data = event.text
                            vk_session.method('messages.send',
                                              {'user_id': id, 'message': '–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ', 'random_id': 0})
                            flag = 2
                            break
                    if flag == 2:
                        for event in longpoll.listen():
                            if event.type == VkEventType.MESSAGE_NEW and not event.from_me and event.user_id == id:
                                p.place = event.text
                                vk_session.method('messages.send',
                                                  {'user_id': id, 'message': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫',
                                                   'random_id': 0})
                                flag = 3
                                break
                    if flag == 3:
                        for event in longpoll.listen():
                            if event.type == VkEventType.MESSAGE_NEW and not event.from_me and event.user_id == id:
                                p.persons = event.text
                                vk_session.method('messages.send',
                                                  {'user_id': id,
                                                   'message': '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
                                                   'random_id': 0})
                                for event in longpoll.listen():
                                    if event.type == VkEventType.MESSAGE_NEW and not event.from_me and event.user_id == id:
                                        p.description = event.text
                                        break
                                vk_session.method('messages.send',
                                                  {'user_id': id,
                                                   'message': '–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –±–µ—Å–µ–¥—É',
                                                   'random_id': 0})
                                for event in longpoll.listen():
                                    if event.type == VkEventType.MESSAGE_NEW and not event.from_me and event.user_id == id:
                                        p.link = event.text
                                        break

                                vk_session.method('messages.send',
                                                  {'user_id': id,
                                                   'message': 'üìÜ –î–∞—Ç–∞: '+ p.data +'\n' + 'üè† –ú–µ—Å—Ç–æ: ' + p.place + '\n' + 'üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫:' + p.persons,
                                                   'random_id': 0})
                                flag = 0
                                vk_session.method('messages.send',
                                                  {'user_id': id,
                                                   'message': '–í—Å—ë –≤–µ—Ä–Ω–æ? (–î–∞/–ù–µ—Ç)',
                                                   'random_id': 0})

                                for event in longpoll.listen():
                                    if event.type == VkEventType.MESSAGE_NEW and not event.from_me and event.user_id == id:
                                        response = event.text.lower()
                                        if(response == '–¥–∞'):
                                            r = random.randrange(100000000, 999999999, 25)
                                            p.own_number = str(r)
                                            partys.add(p)
                                            vk_session.method('messages.send',
                                                              {'user_id': id,
                                                               'message': '‚úÖ –ü—å—è–Ω–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!' + '\n' + '#Ô∏è‚É£–ï—ë —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä: ' + p.own_number,
                                                               'random_id': 0})
                                            vk_session.method('messages.send',
                                                              {'user_id': id,
                                                               'message': '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –ø—å—è–Ω–∫—É',
                                                               'random_id': 0})
                                            flag = 0
                                            kolvo = kolvo + 1
                                            break
                                        if (response == '–Ω–µ—Ç'):
                                            flag = 1
                                            break
                                break
